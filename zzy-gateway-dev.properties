server.port=8088
spring.application.name=zzy-consumer
#eureka
#eureka.client.register-with-eureka=false
#eureka.client.healthcheck.enabled=true
#eureka.client.fetchRegistry=true
eureka.client.service-url.defaultZone=http://192.168.2.169:8761/eureka/

# kafuka
spring.kafka.consumer.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.group-id=0
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
#=======set comsumer max fetch.byte 2*1024*1024=============
spring.kafka.consumer.properties.max.partition.fetch.bytes=2097152

#mongo db log
logging.level.org.springframework.data.mongodb.core=DEBUG

#spring datasource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=false
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
##连接池允许的最大连接数，如果包括空闲连接和正在使用的连接，当连接池连接被用完用，其他线程在获取连接时，在connectionTimeout时间之前，getConnection将一直处于阻塞状态
spring.datasource.hikari.maximum-pool-size=20
## 空闲连接最大存活时间，这个参数只有在maximumPoolSize的值大于minimumIdle时才生效，允许输入的最小值为10000ms（10秒），默认为600000（10分钟）
spring.datasource.hikari.idle-timeout=600000
## 最小空闲连接池数量，HikariCP建议不要设置改值，将连接池的大小设置为固定大小，默认改值与maximumPoolSize大小一致
spring.datasource.hikari.minimum-idle=20
## 等待从连接池获取连接的最大时间，单位微秒，最小值为250ms，默认值为30000（30秒）
spring.datasource.hikari.connection-timeout=10000
#spring.datasource.hikari.auto-commit=true
## 连接池中连接的最大生命周期，默认设置为1800000（30分钟），其值也取决于idleTimeout
spring.datasource.hikari.max-lifetime=300000
## 该属性用于设置如果连接池不能正确产生初始连接时，是否迅速返回错误信息，默认为1
spring.datasource.hikari.initialization-fail-timeout=1
## 验证连接是否有效的最大时间，该值必须小于connectionTimeout，最小值为250ms，默认为5000（5秒）
spring.datasource.hikari.validation-timeout=5000
logging.level.com.zaxxer.hikari=debug

#mybatis
mybatis.mapper-locations=classpath:mappers/*Mapper.xml
mybatis.type-aliases-package=com.example.springbootconsumer.mybatis.dos
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.2.2
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=0

# log
logging.path=/spring/log
logging.file=D://data//springboot.log